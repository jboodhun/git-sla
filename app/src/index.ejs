<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>React Redux</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="/css/style.css" rel="stylesheet">
    <link href="/css/font-awesome.min.css" rel="stylesheet">
    <!--<link rel="icon" type="image/png" sizes="96x96" href="/images/favicon-96x96.png">-->
    <script src="/js/webcomponents-loader.js"></script>
  </head>
  <body class="app header-fixed sidebar-fixed aside-menu-fixed aside-menu-hidden">


    <div id="app"></div>

    <div id="root"></div>

    <!--
      Feature detect Custom Elements support. If the browser DOES support Custom
      Elements then we need to load the custom-elements-es5-adapter because
      our project code has been transpiled from ES2015 to ES5 and native Custom
      Elements expect elements will be registered as classes.
    -->


    <!--
      Use the webcomponents-loader script which will feature detect which Web
      Components features are missing and lazy load the appropriate polyfills.
      When we hear the 'WebComponentsReady' event from the polyfill bundle we can
      insert our 'bundle.js'.
    -->
    <script>
      (function() {
        document.addEventListener('WebComponentsReady', function componentsReady() {
          document.removeEventListener('WebComponentsReady', componentsReady, false);
          var script = document.createElement('script');
          script.src = '<%= htmlWebpackPlugin.files.js[0] %>';
          var refScript = document.getElementsByTagName('script')[0];
          refScript.parentNode.insertBefore(script, refScript);
        }, false);
      })();
    </script>

  </body>
</html>
